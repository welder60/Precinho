// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'core/config/app_config.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get web => FirebaseOptions(
        apiKey: AppConfig.get('FIREBASE_WEB_API_KEY',
            defaultValue: 'YOUR_FIREBASE_WEB_API_KEY'),
        appId: AppConfig.get('FIREBASE_WEB_APP_ID',
            defaultValue: 'YOUR_FIREBASE_WEB_APP_ID'),
        messagingSenderId: AppConfig.get('FIREBASE_WEB_MESSAGING_SENDER_ID',
            defaultValue: 'YOUR_FIREBASE_WEB_MESSAGING_SENDER_ID'),
        projectId:
            AppConfig.get('FIREBASE_PROJECT_ID', defaultValue: 'YOUR_FIREBASE_PROJECT_ID'),
        authDomain: AppConfig.get('FIREBASE_WEB_AUTH_DOMAIN',
            defaultValue: 'YOUR_FIREBASE_WEB_AUTH_DOMAIN'),
        storageBucket: AppConfig.get('FIREBASE_STORAGE_BUCKET',
            defaultValue: 'YOUR_FIREBASE_STORAGE_BUCKET'),
        measurementId: AppConfig.get('FIREBASE_MEASUREMENT_ID',
            defaultValue: 'YOUR_MEASUREMENT_ID'),
      );

  static FirebaseOptions get android => FirebaseOptions(
        apiKey: AppConfig.get('FIREBASE_ANDROID_API_KEY',
            defaultValue: 'YOUR_FIREBASE_ANDROID_API_KEY'),
        appId: AppConfig.get('FIREBASE_ANDROID_APP_ID',
            defaultValue: 'YOUR_FIREBASE_ANDROID_APP_ID'),
        messagingSenderId: AppConfig.get('FIREBASE_ANDROID_MESSAGING_SENDER_ID',
            defaultValue: 'YOUR_FIREBASE_ANDROID_MESSAGING_SENDER_ID'),
        projectId:
            AppConfig.get('FIREBASE_PROJECT_ID', defaultValue: 'YOUR_FIREBASE_PROJECT_ID'),
        storageBucket: AppConfig.get('FIREBASE_STORAGE_BUCKET',
            defaultValue: 'YOUR_FIREBASE_STORAGE_BUCKET'),
      );

  static FirebaseOptions get ios => FirebaseOptions(
        apiKey: AppConfig.get('FIREBASE_IOS_API_KEY',
            defaultValue: 'YOUR_FIREBASE_IOS_API_KEY'),
        appId: AppConfig.get('FIREBASE_IOS_APP_ID',
            defaultValue: 'YOUR_FIREBASE_IOS_APP_ID'),
        messagingSenderId: AppConfig.get('FIREBASE_IOS_MESSAGING_SENDER_ID',
            defaultValue: 'YOUR_FIREBASE_IOS_MESSAGING_SENDER_ID'),
        projectId:
            AppConfig.get('FIREBASE_PROJECT_ID', defaultValue: 'YOUR_FIREBASE_PROJECT_ID'),
        storageBucket: AppConfig.get('FIREBASE_STORAGE_BUCKET',
            defaultValue: 'YOUR_FIREBASE_STORAGE_BUCKET'),
        iosBundleId: 'com.precinho.precinhoApp',
      );

  static FirebaseOptions get macos => FirebaseOptions(
        apiKey: AppConfig.get('FIREBASE_IOS_API_KEY',
            defaultValue: 'YOUR_FIREBASE_IOS_API_KEY'),
        appId: AppConfig.get('FIREBASE_IOS_APP_ID',
            defaultValue: 'YOUR_FIREBASE_IOS_APP_ID'),
        messagingSenderId: AppConfig.get('FIREBASE_IOS_MESSAGING_SENDER_ID',
            defaultValue: 'YOUR_FIREBASE_IOS_MESSAGING_SENDER_ID'),
        projectId:
            AppConfig.get('FIREBASE_PROJECT_ID', defaultValue: 'YOUR_FIREBASE_PROJECT_ID'),
        storageBucket: AppConfig.get('FIREBASE_STORAGE_BUCKET',
            defaultValue: 'YOUR_FIREBASE_STORAGE_BUCKET'),
        iosBundleId: 'com.precinho.precinhoApp',
      );

  static FirebaseOptions get windows => FirebaseOptions(
        apiKey: AppConfig.get('FIREBASE_WEB_API_KEY',
            defaultValue: 'YOUR_FIREBASE_WEB_API_KEY'),
        appId: AppConfig.get('FIREBASE_WEB_APP_ID',
            defaultValue: 'YOUR_FIREBASE_WEB_APP_ID'),
        messagingSenderId: AppConfig.get('FIREBASE_WEB_MESSAGING_SENDER_ID',
            defaultValue: 'YOUR_FIREBASE_WEB_MESSAGING_SENDER_ID'),
        projectId:
            AppConfig.get('FIREBASE_PROJECT_ID', defaultValue: 'YOUR_FIREBASE_PROJECT_ID'),
        authDomain: AppConfig.get('FIREBASE_WEB_AUTH_DOMAIN',
            defaultValue: 'YOUR_FIREBASE_WEB_AUTH_DOMAIN'),
        storageBucket: AppConfig.get('FIREBASE_STORAGE_BUCKET',
            defaultValue: 'YOUR_FIREBASE_STORAGE_BUCKET'),
        measurementId: AppConfig.get('FIREBASE_MEASUREMENT_ID',
            defaultValue: 'YOUR_MEASUREMENT_ID'),
      );
}
